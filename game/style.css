:root{
  --board-grid-size: min(min(10vw, 8vh), 50px);
  --board-grid-gap: 5px;
  --number-grid-gap: 10px;
  --cond-grid-size: min(min(9vw, 7vh), 50px);
  --cond-grid-gap: 2px;
}

#screen #game-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: max-content;
  place-items: center;
  padding: 20px;
  transform: translate(100%);
  transition: transform 0.3s ease-in-out;
  display: grid;
  grid-template-columns: 15% 75%;
  grid-row-gap: 10px;

  #selec {
    display: grid;
    grid-row-gap: 20px;
    margin-right: 10px;
    color: var(--blue);
    cursor: pointer;
    font-size: var(--font-size);
  }

  #board {
    display: grid;
    grid-template-columns: repeat(3, var(--board-grid-size));
    grid-column-gap: var(--board-grid-gap);
    grid-row-gap: var(--board-grid-gap);

    button.index {
      width: var(--board-grid-size);
      height: var(--board-grid-size);
      border: 2px solid var(--bg-main);
      background-color: var(--bg-main);
      border-radius: 50%;
      display: grid;
      grid-template-columns: repeat(3,1fr);
      
      place-items: center;
      span {
        color: var(--txt-color);
      }
    }
    button.index:hover {border-color: var(--blue);}
    button.index.error-shake {border-color: var(--red); animation: shake 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);}
    button.index[focus] {
      border-color: var(--blue);
      background-color: var(--blue);
      
      span {
        color: var(--fill-text);
      }
    }
    button.index.success {
      background-color: var(--green); 
      border-color: var(--green);
      animation: flip 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      span {
        color: var(--fill-text);
      }
    }
    button.index.flip {
      animation: flip 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
    button.index>span:only-child {
      font-size: var(--font-size);
      grid-column-start: 2;
    }
  }

  #condition-bar {
    grid-column-start: 1;
    grid-column-end: 3;
    width: 100%;
    display: grid;
    grid-template-columns: 10% 90% 10%;
    place-items: center;

    button {
      place-items: center;
      height: 100%;
      font-size: var(--font-size);
      color: var(--txt-color);
      border: 2px solid var(--bg-main);
      border-radius: 10px;
      background-color: transparent;
      cursor: pointer;
    }
    button#last-cond {box-shadow: 20px 0px 30px var(--shadow);}
    button#next-cond {box-shadow: -20px 0px 30px var(--shadow);}
    button#last-cond:hover,button#next-cond:hover {border-color: var(--blue);}

    ul#condition {
      overflow: hidden;
      width: 95%;
      position: relative;

      li.cond {
        width: max-content;
        position: absolute;
        top:0;
        left: 50%;
        transform: translate(-50%);
        background-color: var(--shadow);
        border-radius: 10px;
        padding: 0 10px 5px 10px;
        display: grid;
        place-items: center;
        grid-row-gap: 5px;
        opacity: 0;
        transition: transform 0.3s ease-in-out, opacity 0.2s;

        #cond-text {
          display: flex;
          justify-content: center;
          align-items: center;
          color: var(--txt-color);
          font-size: var(--font-size);
        }

        #cond-board {
          display: grid;
          grid-template-columns: repeat(3, var(--cond-grid-size));
          grid-column-gap: var(--cond-grid-gap);
          grid-row-gap: var(--cond-grid-gap);

          span {
            display: flex;
            justify-content: center;
            align-items: center;
            width: var(--cond-grid-size);
            height: var(--cond-grid-size);
            border: 0px;
            background-color: var(--bg-main);
            border-radius: 10px;
            color: var(--txt-color);
            font-size: var(--font-size);
          }
          span[none] {opacity: 0;}
        }
      }
      li.cond[keep] {
        position: relative;
        /* opacity: 0; */
      }
      li.cond[now] {
        opacity: 1;
      }
      li.cond[last] {
        transform: translate(-300%);
      }
      li.cond[next] {
        transform: translate(300%);
      }
    }
  }

  #operation-bar {
    margin-right: 10px;
    grid-column-start: 1;
    grid-column-end: 2;
    display: grid;
    grid-row-gap: var(--number-grid-gap);

    button.oper {
      width: var(--board-grid-size);
      height: var(--board-grid-size);
      border: 2px solid var(--bg-main);
      background-color: var(--bg-main);
      border-radius: 10px;
      color: var(--txt-color);
      font-size: var(--font-size);
    }
    button.oper:hover {border-color: var(--blue);}
  }
  #number-bar {
    grid-column-start: 2;
    grid-column-end: 3;
    display: grid;
    grid-template-columns: repeat(5, var(--board-grid-size));
    grid-column-gap: var(--number-grid-gap);
    grid-row-gap: var(--number-grid-gap);

    button.number,button.oper {
      width: var(--board-grid-size);
      height: var(--board-grid-size);
      border: 2px solid var(--bg-main);
      background-color: var(--bg-main);
      border-radius: 10px;
      color: var(--txt-color);
      font-size: var(--font-size);
    }
    button.number:hover,button.oper:hover {border-color: var(--blue);}
  }
}
#screen #game-container[active] {transform: translate(0);}




@keyframes shake {
  0% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(10px);
  }
  50% {
    transform: translateX(-10px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes flip {
  0% {
    transform: rotateY(0);
  }
  50% {
    transform: rotateY(180deg);
  }
  100% {
    transform: rotateY(360deg);
  }
}